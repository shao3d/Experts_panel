version: '3.8'

services:
  nginx-reverse-proxy:
    image: nginx:alpine
    container_name: experts-panel-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ssl:/etc/ssl:ro
      - ./nginx/nginx-prod.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - experts-panel-network
    restart: unless-stopped
    depends_on:
      - backend-api
      - frontend-app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  backend-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: experts-panel-backend
    environment:
      # Database
      - DATABASE_URL=sqlite:///data/experts.db

      # Critical: OpenRouter API (supports both variable names for flexibility)
      - OPENAI_API_KEY=${OPENROUTER_API_KEY:-$OPENAI_API_KEY}

      # Production settings
      - PRODUCTION_ORIGIN=${PRODUCTION_ORIGIN}
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO

      # Performance settings
      - PORT=8000
      - MAX_POSTS_LIMIT=500
      - CHUNK_SIZE=20
      - REQUEST_TIMEOUT=300

      # Optional: Telegram API for synchronization
      - TELEGRAM_API_ID=${TELEGRAM_API_ID}
      - TELEGRAM_API_HASH=${TELEGRAM_API_HASH}
      - TELEGRAM_CHANNEL=${TELEGRAM_CHANNEL}
    volumes:
      # Mount database directory for persistence
      - ./data:/app/data
      # Mount logs directory
      - ./logs:/app/logs
    networks:
      - experts-panel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Resource limits for production
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  frontend-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: experts-panel-frontend
    environment:
      # API communication with production domain
      - REACT_APP_API_URL=${PRODUCTION_ORIGIN}/api
      - GENERATE_SOURCEMAP=false
    networks:
      - experts-panel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    # Resource limits for frontend
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

networks:
  experts-panel-network:
    driver: bridge
    # Custom network for internal communication
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Note: No volumes section needed as we use bind mounts directly in services